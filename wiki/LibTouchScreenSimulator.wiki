#summary Java simulator for the TouchScreen Arduino library

<img src="http://ardurct.googlecode.com/svn/images/Graphics.png"><img src="http://ardurct.googlecode.com/svn/images/UITests.png" align="right">

[http://code.google.com/p/ardurct/downloads/list http://www.gstatic.com/codesite/ph/images/dl_arrow.gif] [http://code.google.com/p/ardurct/downloads/list Download]

===Content===
This archive contains the Eclipse source for a simulator of the TouchScreen. This facilitates the development of screen layouts for the display.<br>

The idea is to write code in java as if it was code for Arduino and then copy and paste the code in Arduino and obtain the same result on the hardware. 
That is to say: fill in a setup and a loop function.<br>

As of now, the Simulator can simulate:
 * HardwareSerial
 * SD
 * EEPROM
 * TouchScreen
  * Screen
  * Touch panel

===Usage===
 # Duplicate one of the files under the examples folder, such as Graphics,
 # Modify it to suit your needs,
 # Run the 'Simulator' application, and choose from the examples menu your test.
 # Copy the content of setup and loop into your Arduino code.
<u>Examples</u><br>
To produce the Graphics image above, use the following code.
{{{
package com.google.code.ardurct.touchscreen.examples;


public class Graphics extends Example {

	public void setup() {
	    touchscreen.begin(BLACK, WHITE, FONT_MEDIUM, FONT_BOLD, OVERLAY);
	    touchscreen.setBacklight(180);

	    // Fonts
	    touchscreen.drawString("SMALL", 5, 5, BLACK, FONT_SMALL, false, false);
	    touchscreen.drawString("BOLD", 100, 5, BLACK, FONT_SMALL, FONT_BOLD, false);
	    touchscreen.drawString("MEDIUM", 5, 20, BLACK, FONT_MEDIUM, false, false);
	    touchscreen.drawString("BOLD", 100, 20, BLACK, FONT_MEDIUM, FONT_BOLD, false);
	    touchscreen.drawString("BIG", 5, 40, BLACK, FONT_BIG, false, false);
	    touchscreen.drawString("BOLD", 100, 40, BLACK, FONT_BIG, FONT_BOLD, false);
	    touchscreen.drawString("HUGE", 5, 65, BLACK, FONT_HUGE, false, false);
	    touchscreen.drawString("BOLD", 100, 65, BLACK, FONT_HUGE, FONT_BOLD, false);
	    // Lines
	    touchscreen.drawLine(10, 95, 60, 95, RED, 2);
	    touchscreen.drawLine(80, 95, 80, 105, RED, 3);
	    touchscreen.drawLine(100, 95, 130, 105, RED, 1);
	    // Triangles
	    touchscreen.drawTriangle(20, 140, 40, 120, 50, 135, BLUE, 2);
	    touchscreen.fillTriangle(120, 130, 140, 120, 150, 135, BLUE);
	    // Rectangle
	    touchscreen.drawRectangle(30, 150, 40, 20, MAGENTA, 3);
	    touchscreen.fillRectangle(130, 150, 40, 20, MAGENTA);
	    // Rounded rectangle
	    touchscreen.drawRoundedRectangle(30, 180, 40, 20, 6, GREEN, 2);
	    touchscreen.fillRoundedRectangle(130, 180, 40, 20, 6, GREEN);
	    // Arcs
	    touchscreen.drawArc(40, 210, 30, SCREEN_ARC_SE, RED, 4);
	    touchscreen.drawArc(80, 240, 30, SCREEN_ARC_NEE, RED, 3);
	    touchscreen.fillArc(140, 210, 20, SCREEN_ARC_SW, RED);
	    // Circles
	    touchscreen.drawCircle(50, 270, 20, BLUE, 1);
	    touchscreen.drawCircle(100, 270, 20, BLUE, 3);
	    touchscreen.fillCircle(150, 270, 20, BLUE);
	}

	public void loop() {
	    delay(100);
	}
}
}}}
<br>
To produce the UITests image above, use the following code.<br><br>
<u>Note:<u><br>
After copying the code to Arduino, you will have to name the callbacks instead of using 'this'.<br>
That is to say replace the first this by '&uiActionCallback' and the second one by '&uiDrawCallback'.
{{{
package com.google.code.ardurct.touchscreen.examples;

import com.google.code.ardurct.touchscreen.IUIActionCallback;
import com.google.code.ardurct.touchscreen.IUIDrawCallback;


public class UITests extends Example 
implements IUIActionCallback, IUIDrawCallback {

	public int LIST_TAB;
	public int TESTS_TAB;
	public int COLORS_TAB;
	
	public static int TEST_ID = 100;
	public static int PUSH_1_ID = 101;
	public static int PUSH_2_ID = 102;
	public static int PUSH_3_ID = 103;
	public static int T1_ID = 110;
	public static int T2_ID = 111;
	public static int LABEL_B_ID = 118;
	public static int LABEL_O_ID = 119;
	public static int LABEL_1_ID = 120;
	public static int LABEL_2_ID = 125;
	public static int LABEL_3_ID = 127;
	public static int GAUGE_1_ID = 130;
	public static int SLIDER_1_ID = 140;
	public static int GAUGE_2_ID = 150;
	public static int SLIDER_2_ID = 160;
	
	public static int SLIDER_R_ID = 200;
	public static int SLIDER_G_ID = 201;
	public static int SLIDER_B_ID = 202;
	public static int LABEL_R_ID = 205;
	public static int AREA_COLOR_ID = 210;
	
	public static int GROUP_1 = 3;
	
	public void setup() {
	    touchscreen.begin(BLACK, WHITE, FONT_SMALL, FONT_PLAIN, NO_OVERLAY);
	    touchscreen.setBacklight(180);
	    
	    touchscreen.setupUI(0, 0, touchscreen.getWidth(), touchscreen.getHeight());
	    LIST_TAB = touchscreen.addUITab(stringToArray("List"));
	    TESTS_TAB = touchscreen.addUITab(stringToArray("Tests"), this);
	    COLORS_TAB = touchscreen.addUITab(stringToArray("Colors"), this, this);
	    
	    touchscreen.addUILabel(TESTS_TAB, LABEL_B_ID, 5, 5, UI_AUTO_SIZE, UI_AUTO_SIZE, stringToArray("Button"));
	    touchscreen.addUIButton(TESTS_TAB, TEST_ID, UI_RIGHT_OF_WITH_MARGIN + LABEL_B_ID, 5, UI_AUTO_SIZE, UI_AUTO_SIZE, stringToArray("Test"));
	    touchscreen.addUILabel(TESTS_TAB, LABEL_O_ID, 5, 35, UI_AUTO_SIZE, UI_AUTO_SIZE, stringToArray("Option"));
	    touchscreen.addUIPushButton(TESTS_TAB, PUSH_1_ID, GROUP_1, UI_RIGHT_OF_WITH_MARGIN + LABEL_O_ID, 35, 
	    		UI_AUTO_SIZE, UI_AUTO_SIZE, stringToArray("30"), UI_SELECTED);
	    touchscreen.addUIPushButton(TESTS_TAB, PUSH_2_ID, GROUP_1, UI_RIGHT_OF + PUSH_1_ID, UI_SAME_AS + PUSH_1_ID, 
	    		UI_SAME_AS + PUSH_1_ID, UI_SAME_AS + PUSH_1_ID, stringToArray("60"), UI_UNSELECTED);
	    touchscreen.addUIPushButton(TESTS_TAB, PUSH_3_ID, GROUP_1, UI_RIGHT_OF + PUSH_2_ID, UI_SAME_AS + PUSH_1_ID, 
	    		UI_SAME_AS + PUSH_1_ID, UI_SAME_AS + PUSH_1_ID, stringToArray("90"), UI_UNSELECTED);
	    touchscreen.addUILabel(TESTS_TAB, LABEL_1_ID, 5, 65, UI_AUTO_SIZE, UI_AUTO_SIZE, stringToArray("Push button"));
	    touchscreen.addUIPushButton(TESTS_TAB, T1_ID, UI_NO_GROUP, UI_RIGHT_OF_WITH_MARGIN + LABEL_1_ID, UI_SAME_AS + LABEL_1_ID, UI_AUTO_SIZE, UI_AUTO_SIZE, stringToArray("T1"), UI_SELECTED);
	    touchscreen.addUIPushButton(TESTS_TAB, T2_ID, UI_NO_GROUP, UI_RIGHT_OF_WITH_MARGIN + T1_ID, UI_SAME_AS + T1_ID, 
	    		UI_SAME_AS + T1_ID, UI_SAME_AS + T1_ID, stringToArray("T2"), UI_UNSELECTED);
	    touchscreen.addUILabel(TESTS_TAB, LABEL_2_ID, 5, 95, UI_AUTO_SIZE, UI_AUTO_SIZE, stringToArray("Gauge"));
	    touchscreen.addUIGauge(TESTS_TAB, GAUGE_1_ID, UI_RIGHT_OF_WITH_MARGIN + LABEL_2_ID, UI_SAME_AS + LABEL_2_ID, 
	    		150, UI_SAME_AS + LABEL_2_ID, 40, 0, 100);
	    touchscreen.addUILabel(TESTS_TAB, LABEL_3_ID, 5, 125, UI_AUTO_SIZE, UI_AUTO_SIZE, stringToArray("Slider"));
	    touchscreen.addUISlider(TESTS_TAB, SLIDER_1_ID, UI_RIGHT_OF_WITH_MARGIN + LABEL_3_ID, UI_SAME_AS + LABEL_3_ID, 
	    		150, UI_SAME_AS + LABEL_3_ID, 40, 0, 100);
	    touchscreen.addUISlider(TESTS_TAB, SLIDER_2_ID, 15, 150, 20, 120, 2, 0, 10);
	    touchscreen.addUIGauge(TESTS_TAB, GAUGE_2_ID, 60, 150, 20, 120, 2, 0, 10);
	    touchscreen.setUITab(TESTS_TAB);
	    
	    touchscreen.addUILabel(COLORS_TAB, LABEL_R_ID, 5, 15, UI_AUTO_SIZE, UI_AUTO_SIZE, stringToArray("R"));
	    touchscreen.addUISlider(COLORS_TAB, SLIDER_R_ID, UI_RIGHT_OF_WITH_MARGIN + LABEL_R_ID, 15, 180, UI_SAME_AS + LABEL_R_ID, 0x15, 0, 0x1F);
	    touchscreen.addUILabel(COLORS_TAB, 0, 5, 45, UI_AUTO_SIZE, UI_AUTO_SIZE, stringToArray("G"));
	    touchscreen.addUISlider(COLORS_TAB, SLIDER_G_ID, UI_RIGHT_OF_WITH_MARGIN + LABEL_R_ID, 45, 180, UI_SAME_AS + LABEL_R_ID, 0x1E, 0, 0x3F);
	    touchscreen.addUILabel(COLORS_TAB, 0, 5, 75, UI_AUTO_SIZE, UI_AUTO_SIZE, stringToArray("B"));
	    touchscreen.addUISlider(COLORS_TAB, SLIDER_B_ID, UI_RIGHT_OF_WITH_MARGIN + LABEL_R_ID, 75, 180, UI_SAME_AS + LABEL_R_ID, 0xD, 0, 0x1F);
	    touchscreen.addUIArea(COLORS_TAB, AREA_COLOR_ID, 50, 130, 140, 140);
	    touchscreen.setUIElementEditable(AREA_COLOR_ID, false);
	    touchscreen.setUIElementValue(AREA_COLOR_ID, 0xABCD);
	    
	}

	public void loop() {
		touchscreen.handleUI();
	    delay(20);
	}

	public void uiActionCallback(int id) {
		if (id == SLIDER_1_ID) touchscreen.setUIElementValue(GAUGE_1_ID, touchscreen.getUIElementValue(SLIDER_1_ID));
		if (id == SLIDER_2_ID) touchscreen.setUIElementValue(GAUGE_2_ID, touchscreen.getUIElementValue(SLIDER_2_ID));
		if ((id >= SLIDER_R_ID) && (id <= SLIDER_B_ID)) {
			touchscreen.setUIElementValue(AREA_COLOR_ID, 
					(touchscreen.getUIElementValue(SLIDER_R_ID) << 11) + (touchscreen.getUIElementValue(SLIDER_G_ID) << 5) + touchscreen.getUIElementValue(SLIDER_B_ID));
		}
	}

	public void uiDrawCallback(int id, int x, int y, int width, int height, int value) {
		if (id == AREA_COLOR_ID) {
			touchscreen.fillRectangle(x, y, width, 40, WHITE);
			touchscreen.setCursor(x+5, y);
			touchscreen.print("RGB = 0x");
			touchscreen.print(touchscreen.getUIElementValue(SLIDER_R_ID), HEX);
			touchscreen.print(" 0x");
			touchscreen.print(touchscreen.getUIElementValue(SLIDER_G_ID), HEX);
			touchscreen.print(" 0x");
			touchscreen.print(touchscreen.getUIElementValue(SLIDER_B_ID), HEX);
			touchscreen.setCursor(x+5, y+touchscreen.getFontHeight(FONT_SMALL)+4);
			touchscreen.print("RGB565 = 0x");
			touchscreen.print(value, HEX);
			touchscreen.fillRectangle(x, y+30, width, height-30, value);
			touchscreen.drawRectangle(x, y+30, width, height-30, BLACK, 1);
		}
	}
}
}}}